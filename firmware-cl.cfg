#
# Config for accessing Orchard through Raspberry Pi's GPIO header.
#

#interface bcm2835gpio
interface sysfsgpio

transport select jtag

set _CHIPNAME xc7a35t

# Raspi2 and Raspi3  peripheral_base address
#bcm2835gpio_peripheral_base 0x3F000000

# Raspi3 B (oscope tuned)
#bcm2835gpio_speed_coeffs 315000 24

# Raspip 3B+ (oscope tuned)
#bcm2835gpio_speed_coeffs 340000 10


# set as tck tms tdi tdo
#bcm2835gpio_jtag_nums 4 17 27 22
sysfsgpio_tck_num  4
sysfsgpio_tms_num  17
sysfsgpio_tdi_num  27
sysfsgpio_tdo_num  22

#bcm2835gpio_srst_num 24

#reset_config srst_only
reset_config none

#bcm2835gpio_srst_num 24
sysfsgpio_srst_num 24

adapter_khz 3000 
# verified with oscope to be about as fast as you want it to go
# on a 3B:
# TCK duty cycle is asymmetric, unstable at 10MHz
# starts to get marginal @ 6MHz, but solid at 5MHz
# on a 3B+:
# TCK duty cycle is solid at 6000MHz, using the correct speed coeffs above
#
# also, OpenOCD needs this patch:
#    pads_base[BCM2835_PADS_GPIO_0_27_OFFSET] = 0x5a000008 + 4; // 10mA drive coz we are terminated and want to go faster
# at line 472 in bcm2835gpio.c

source [find cpld/xilinx-xc7.cfg]
#source [find cpld/jtagspi.cfg]

set _USER1 0x02

if { [info exists JTAGSPI_IR] } {
	set _JTAGSPI_IR $JTAGSPI_IR
} else {
	set _JTAGSPI_IR $_USER1
}

if { [info exists DR_LENGTH] } {
	set _DR_LENGTH $DR_LENGTH
} else {
	set _DR_LENGTH 1
}

if { [info exists TARGETNAME] } {
	set _TARGETNAME $TARGETNAME
} else {
	set _TARGETNAME $_CHIPNAME.proxy
}

if { [info exists FLASHNAME] } {
	set _FLASHNAME $FLASHNAME
} else {
	set _FLASHNAME $_CHIPNAME.spi
}
target create $_TARGETNAME testee -chain-position $_CHIPNAME.tap
flash bank $_FLASHNAME jtagspi 0 0 0 0 $_TARGETNAME $_JTAGSPI_IR $_DR_LENGTH

proc jtagspi_init {chain_id proxy_bit} {
	# load proxy bitstream $proxy_bit and probe spi flash
	global _FLASHNAME
	pld load $chain_id $proxy_bit
	reset halt
	flash probe $_FLASHNAME
}
proc jtagspi_program {bin addr} {
	# write and verify binary file $bin at offset $addr
	global _FLASHNAME
	flash write_image erase $bin $addr
	flash verify_bank $_FLASHNAME $bin $addr
}
#jtag newtap $_CHIPNAME tap -irlen 6 -ignore-version -expected-id 0x0362d093

#reset_config srst_only

init

#pld load 0 bscan_spi_xc7a35t.bit
#jtagspi_init 0 bscan_spi_xc7a35t.bit
pld load 0 $BSCAN_FILE
reset halt
flash probe xc7.spi

#jtagspi_program top.bin 0
# 0x7B0000 = 0x800000 - 0x50000 offset from top, so we can fit in two 100T FPGA images
jtagspi_program $FIRMWARE_FILE 0x7b0000
xc7_program xc7.tap

exit

# Halt the CPU, allowing GDB to attach
#reset halt
